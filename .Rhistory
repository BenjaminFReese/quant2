m <- ivreg(as.formula(paste(dvs[i],"~hajj2006 + age + literate + ptygrp +
female + urban | success + age + literate + ptygrp + female + urban")), data=hajj_public)
assign(model,m)}
table(model1, model2, model3, model4, model5, model6)
mtable(model1, model2, model3, model4, model5, model6)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
## Loop
## DVs
dvs <- c("hajj_public$x_s10bq4", "hajj_public$x_s7q12a", "hajj_public$x_s7q1",
"hajj_public$x_s3q3", "hajj_public$x_s10eq2", "hajj_public$x_s10dq1")
## Loop
for(i in 1:length(dvs)){
model <- paste("model",i, sep="")
m <- ivreg(as.formula(paste(dvs[i],"~hajj2006 + age + literate + ptygrp +
female + urban | success + age + literate + ptygrp + female + urban")), data=hajj_public)
assign(model,m)}
mtable(model1, model2, model3, model4, model5, model6)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
## OssamaIncorrect
hajj_public %>%
ivreg(x_s10bq4~hajj2006 + age + literate + ptygrp + female + urban | success +
age + literate + ptygrp + female + urban, data=.) %>%
broom::tidy()
## GovtForce
hajj_public %>%
ivreg(x_s7q12a~hajj2006 + age + literate + ptygrp + female + urban | success +
age + literate + ptygrp + female + urban, data=.) %>%
broom::tidy()
## NatlInterest
hajj_public %>%
ivreg(x_s7q1~hajj2006 + age + literate + ptygrp + female + urban | success +
age + literate + ptygrp + female + urban, data=.) %>%
broom::tidy()
## Happy
hajj_public %>%
ivreg(x_s3q3~hajj2006 + age + literate + ptygrp + female + urban | success +
age + literate + ptygrp + female + urban, data=.) %>%
broom::tidy()
## Girl School
hajj_public %>%
ivreg(x_s10eq2~hajj2006 + age + literate + ptygrp + female + urban | success +
age + literate + ptygrp + female, data=.) %>%
broom::tidy()
## Jobs Women
hajj_public %>%
ivreg(x_s10dq1~hajj2006 + age + literate + ptygrp + female + urban | success +
age + literate + ptygrp + female, data=.) %>%
broom::tidy()
# Setup
rm(list = ls(all = TRUE))   # Removes objects from the previous session
## Packages
library(haven)  ## Package to read Stata data
library(ivreg) ## Package to run 2sls
library(fixest) ## This package can also run 2SLS
library(tidyverse) ## For tidyverse commands
library(memisc) ## For table outputting
## Loading Data
hajj_public <- read_dta("Data/hajj_public.dta")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
## OssamaIncorrect
hajj_public %>%
ivreg(x_s10bq4~hajj2006 + age + literate + ptygrp + female + urban | success +
age + literate + ptygrp + female + urban, data=.) %>%
broom::tidy()
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
Setup
bookdown::render_book("index.Rmd", "bookdown::gitbook")
load("~/GOVT702/Data/EgyptProtests.RData")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
library(plyr)
library(tidyverse)
library(readxl)
library(readr)
library(lubridate)
library(knitr)
knitr::opts_chunk$set(cache=TRUE, message=FALSE, warning=FALSE)
knitr::include_graphics("lab7_image.png")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
## Reading in stock data
stk <- read_csv("Data/stocks2020.csv",  col_names = TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
## Packages for Lab VII
library(plyr)
library(tidyverse)
library(readxl)
library(readr)
library(lubridate)
library(knitr)
## Reading in stock data
stk <- read_csv("Data/stocks2020.csv",  col_names = TRUE)
## Reading in presidential market data
pres_mkt <- read_xlsx("Data/USPres_2020_Price History By Market -Bulk.xlsx", col_names = TRUE) %>%
rename("date" = "Date (ET)",
"name" = "Contract Name",
"price" = "Close Share Price")
, warning=FALSE, message=FALSE
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
## Creating daily price data for Trump
trump2020 <- pres_mkt %>%
filter(year(date) > 2019 & name == "Donald Trump") %>%
dplyr::select(c(date, "Trump" = price))
## Reading in stock data
stk <- read_csv("Data/stocks2020.csv",  col_names = TRUE)
## Reading in presidential market data
pres_mkt <- read_xlsx("Data/USPres_2020_Price History By Market -Bulk.xlsx", col_names = TRUE) %>%
rename("date" = "Date (ET)",
"name" = "Contract Name",
"price" = "Close Share Price")
## Creating daily price data for Trump
trump2020 <- pres_mkt %>%
filter(year(date) > 2019 & name == "Donald Trump") %>%
dplyr::select(c(date, "Trump" = price))
## Creating daily price data for Trump
trump2020 <- pres_mkt %>%
filter(year(date) == 2020 & name == "Donald Trump") %>%
dplyr::select(c(date, "Trump" = price))
## Packages for Lab VII
library(plyr)
library(tidyverse)
library(readxl)
library(readr)
library(lubridate)
library(knitr)
## Creating daily price data for Trump
trump2020 <- pres_mkt %>%
filter(year(date) > 2019 & name == "Donald Trump") %>%
dplyr::select(c(date, "Trump" = price))
year(date
year(date
year(date)
## Reading in presidential market data
pres_mkt <- read_xlsx("Data/USPres_2020_Price History By Market -Bulk.xlsx", col_names = TRUE) %>%
rename("date" = "Date (ET)",
"name" = "Contract Name",
"price" = "Close Share Price") %>%
mutate(date = as_date(date))
## Reading in presidential market data
pres_mkt <- read_xlsx("Data/USPres_2020_Price History By Market -Bulk.xlsx", col_names = TRUE) %>%
rename("date" = "Date (ET)",
"name" = "Contract Name",
"price" = "Close Share Price")
## Creating daily price data for Trump
trump2020 <- pres_mkt %>%
filter(year(date) > 2019 & name == "Donald Trump") %>%
dplyr::select(c(date, "Trump" = price))
## Creating daily price data for Trump
trump2020 <- pres_mkt %>%
filter(year(date) > 2019 & name == "Donald Trump") %>%
dplyr::select(c(date, "Trump" = price))
pres_mkt %>%
filter(year(date) > 2019 & name == "Donald Trump")
pres_mkt %>%
filter(year(Date) > 2019 & name == "Donald Trump") %>%
dplyr::select(c(date, "Trump" = price))
## Reading in presidential market data
pres_mkt <- read_xlsx("Data/USPres_2020_Price History By Market -Bulk.xlsx", col_names = TRUE) %>%
rename("date" = "Date (ET)",
"name" = "Contract Name",
"price" = "Close Share Price")
knitr::include_graphics("lab7_image.png")
## Packages for Lab VII
library(plyr)
library(tidyverse)
library(readxl)
library(readr)
library(lubridate)
library(knitr)
## Packages for Lab VII
library(plyr)
library(tidyverse)
library(readxl)
library(readr)
library(lubridate)
library(knitr)
## Reading in stock data
stk <- read_csv("Data/stocks2020.csv",  col_names = TRUE)
## Reading in presidential market data
pres_mkt <- read_xlsx("Data/USPres_2020_Price History By Market -Bulk.xlsx", col_names = TRUE) %>%
rename("date" = "Date (ET)",
"name" = "Contract Name",
"price" = "Close Share Price")
## Reading in stock data
stk <- read_csv("Data/stocks2020.csv",  col_names = TRUE)
## Reading in presidential market data
pres_mkt <- read_xlsx("Data/USPres_2020_Price History By Market -Bulk.xlsx", col_names = TRUE) %>%
rename("date" = "Date (ET)",
"name" = "Contract Name",
"price" = "Close Share Price")
## Creating list of ticker names
stk_tickers <-
c(names(stk)[!names(stk) %in% c("date", "DJI")])
## Creating number of stocks
stk_num <- length(stk_tickers)
## Joining the two datasets
stk_pres <- left_join(stk, trump2020, by = "date")
## Creating daily price data for Trump
trump2020 <- pres_mkt %>%
filter(year(date) > 2019 & name == "Donald Trump") %>%
dplyr::select(c(date, "Trump" = price))
## Creating daily price data for Trump
trump2020 <- pres_mkt %>%
filter(year(trump2020$date) > 2019 & name == "Donald Trump") %>%
dplyr::select(c(date, "Trump" = price))
## Creating daily price data for Trump
trump2020 <- pres_mkt %>%
filter(year(pres_mkt$date) > 2019 & name == "Donald Trump") %>%
dplyr::select(c(date, "Trump" = price))
## Creating daily price data for Trump
trump2020 <- pres_mkt %>%
filter(year(date) > 2019 & name == "Donald Trump") %>%
dplyr::select(c(date, "Trump" = price))
## Creating daily price data for Trump
trump2020 <- pres_mkt %>%
filter(date > 2019 & name == "Donald Trump") %>%
dplyr::select(c(date, "Trump" = price))
year(date)
pres_mkt$date
pres_mkt$date
pres_mkt$date
pres_mkt$date
View(pres_mkt)
## Reading in presidential market data
pres_mkt <- read_xlsx("Data/USPres_2020_Price History By Market -Bulk.xlsx", col_names = TRUE) %>%
rename("date" = "Date (ET)",
"name" = "Contract Name",
"price" = "Close Share Price")
View(pres_mkt)
## Reading in presidential market data
pres_mkt <- read_xlsx("Data/USPres_2020_Price History By Market -Bulk.xlsx", col_names = TRUE) %>%
mutate("date" = "Date (ET)",
"name" = "Contract Name",
"price" = "Close Share Price")
View(pres_mkt)
## Reading in presidential market data
pres_mkt <- read_xlsx("Data/USPres_2020_Price History By Market -Bulk.xlsx", col_names = TRUE) %>%
mutate(date = `Date (ET)`,
name = `Contract Name`,
price = `Close Share Price`)
View(pres_mkt)
## Reading in presidential market data
pres_mkt <- read_xlsx("Data/USPres_2020_Price History By Market -Bulk.xlsx", col_names = TRUE) %>%
mutate(date = `Date (ET)`,
name = `Contract Name`,
price = `Close Share Price`) %>%
select(-`Date (ET)`, `Contract Name`, `Close Share Price`)
## Reading in presidential market data
pres_mkt <- read_xlsx("Data/USPres_2020_Price History By Market -Bulk.xlsx", col_names = TRUE) %>%
mutate(date = `Date (ET)`,
name = `Contract Name`,
price = `Close Share Price`) %>%
dplyr::select(-`Date (ET)`, -`Contract Name`, -`Close Share Price`)
## Creating daily price data for Trump
trump2020 <- pres_mkt %>%
filter(year(date) > 2019 & name == "Donald Trump") %>%
dplyr::select(c(date, "Trump" = price))
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
## Joining the two datasets
stk_pres <- left_join(stk, trump2020, by = "date")
## Price Change Function
pct_change <- function(x){
(x - lag(x))/lag(x)
}
## Daily Change Dataset
daily_df <- stk_pres %>%
mutate_at(c("DJI", "Trump", stk_tickers), pct_change) %>%
select(c(date, c("DJI", "Trump", stk_tickers)))
## Price Change Function
pct_change <- function(x){
(x - lag(x))/lag(x)
}
## Daily Change Dataset
daily_df <- stk_pres %>%
mutate_at(c("DJI", "Trump", stk_tickers), pct_change) %>%
dplyr::select(c(date, c("DJI", "Trump", stk_tickers)))
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
force(b_test)
force(b_test)
force(b_test)
force(b_test)
force(balance_results)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
load("~/GOVT702/Data/Ch11_Lab_AlcoholCrime.RData")
knitr::include_graphics("lab8_image.png")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
hist(dta$linear, main = "Diagnostic Plot", xlab = "Age", las=1)
rdplot(dta$all_r , dta$linear, c=0, kernel = "triangular", x.label = "Year from Age Cutoff", y.label
= "Arrest Rate", title = "Effect of Alcohol on Crime", binselect = "es")
rdplot(dta$all_r , dta$linear, c=0, kernel = "triangular", x.label = "Year from Age Cutoff", y.label
= "Arrest Rate", title = "Effect of Alcohol on Crime", binselect = "es")
plot(dta_bin$age_fortnight_bin, dta_bin$all_r_bin,  type = "p", pch = 1, cex = 0.5,
cex.main = 0.8, xlab = "Age at time of Arrest", ylab = "Arrest Rate", xaxt='n', yaxt='n')
axis(2, las = 1, tick = T, cex.axis = .8, mgp = c(2,.7,0))
axis(1, tick = T, at= seq(17, 25, by=1), labels =seq(17, 25, by=1),cex.axis = .8, mgp = c(2,.3,0))
# Add fitted lines from "left" and "right" models
points(seq(21 - window, 21, by = 0.1), coef(rd_linear_left) [1] +
coef(rd_linear_left) [2]*seq(-window, 0, by = 0.1), lwd = 2,
col = "darkblue", type = 'l')
points(seq(21, 21 + window, by = 0.1), coef(rd_linear_right)[1] +
coef(rd_linear_right)[2]*seq(0, window , by = 0.1), lwd = 2,
col = "darkblue", type = 'l')
# window set by the window parameter
dta$age_fortnight = 21 + (14*floor(dta$days_to_21/14))/365
# Create a variable placing each observation in a "bin"
dta$bin  = rep(1:length(unique(dta$age_fortnight)), table(dta$age_fortnight))
window <- 4
dta_bin <-  dta %>%
dplyr::select(days_to_21, all_r, property_r, age_fortnight, alcohol_r, bin) %>%
group_by(bin) %>%
summarise(property_r_bin = mean(property_r),
all_r_bin = mean(all_r),
alcohol_r_bin = mean(alcohol_r),
age_fortnight_bin = mean(age_fortnight)) %>%
filter(age_fortnight_bin >= 21- window & age_fortnight_bin <= 21 + window)
# Linear model with varying slopes below and above threshhold
# ALCOHOL ARREST RATES
rd_linear_left <- lm(all_r ~ linear, dta[dta$linear > -window & dta$linear <0, ])
rd_linear_right <- lm(all_r ~ linear, dta[dta$linear  < window & dta$linear >0, ])
# Create a scatter plot
plot(dta_bin$age_fortnight_bin, dta_bin$all_r_bin,  type = "p", pch = 1, cex = 0.5,
cex.main = 0.8, xlab = "Age at time of Arrest", ylab = "Arrest Rate", xaxt='n', yaxt='n')
axis(2, las = 1, tick = T, cex.axis = .8, mgp = c(2,.7,0))
axis(1, tick = T, at= seq(17, 25, by=1), labels =seq(17, 25, by=1),cex.axis = .8, mgp = c(2,.3,0))
# Add fitted lines from "left" and "right" models
points(seq(21 - window, 21, by = 0.1), coef(rd_linear_left) [1] +
coef(rd_linear_left) [2]*seq(-window, 0, by = 0.1), lwd = 2,
col = "darkblue", type = 'l')
points(seq(21, 21 + window, by = 0.1), coef(rd_linear_right)[1] +
coef(rd_linear_right)[2]*seq(0, window , by = 0.1), lwd = 2,
col = "darkblue", type = 'l')
# Create a scatter plot
plot(dta_bin$age_fortnight_bin, dta_bin$all_r_bin,  type = "p", pch = 1, cex = 0.5,
cex.main = 0.8, xlab = "", ylab = "", xaxt='n', yaxt='n')
axis(2, las = 1, tick = T, cex.axis = .8, mgp = c(2,.7,0))
axis(1, tick = T, at= seq(17, 25, by=1), labels =seq(17, 25, by=1),cex.axis = .8, mgp = c(2,.3,0))
mtext("Arrest rate", 	las = 1, side = 2, at = 520, line = -0.2, cex = 1)
mtext("Age at time of arrest", 	side = 1, line = 1., cex = 0.8)
# Add fitted lines from "left" and "right" models
points(seq(21 - window, 21, by = 0.1), coef(rd_linear_left) [1] +
coef(rd_linear_left) [2]*seq(-window, 0, by = 0.1), lwd = 2,
col = "darkblue", type = 'l')
points(seq(21, 21 + window, by = 0.1), coef(rd_linear_right)[1] +
coef(rd_linear_right)[2]*seq(0, window , by = 0.1), lwd = 2,
col = "darkblue", type = 'l')
knitr::include_graphics("rdd_1.png")
knitr::include_graphics("rdd_2.png")
knitr::include_graphics("rdd_2.png")
knitr::include_graphics("rdd_3.png")
knitr::include_graphics("rdd_1.png")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
knitr::include_graphics("opt_lab_image.jpg")
knitr::include_graphics("map_1.jpg")
knitr::include_graphics("map_1.png")
knitr::include_graphics("map_2.png")
knitr::include_graphics("map_3.png")
knitr::include_graphics("map_6.png")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
knitr::include_graphics("time.png")
knitr::include_graphics("time.png")
load("~/GOVT702/Data/Ch13_Lab_GasPrices.RData")
## Loading Data
load("~/GOVT702/Data/Ch13_Lab_GasPrices.RData")
## Model 1
reg.1 <- dta %>%
lm(logMilesNA ~ logGasReal + unem + logPop, data = .)
## Packages
library(haven)
library(AER)
library(orcutt)
library(tidyverse)
library(lubridate)
library(lmtest)
library(sandwich)
## Loading Data
load("~/GOVT702/Data/Ch13_Lab_GasPrices.RData")
## Model 1
reg.1 <- dta %>%
lm(logMilesNA ~ logGasReal + unem + logPop, data = .)
## Summary Output
summary(reg.1)
## 95% CI
confint(reg.1)
## Removing NAs
dta <- dta %>%
drop_na()
## Creating a variable for seasons
dta <- dta %>%
mutate(season = case_when(
month == 1 | month == 2 | month == 3 ~ "Winter",
month == 4 | month == 5 | month == 6 ~ "Spring",
month == 7 | month == 8 | month == 9 ~ "Summer",
month == 10 | month == 11 | month == 12 ~ "Fall")
)
## Model 2 Months
reg.2a <- dta %>%
lm(logMilesNA ~ logGasReal + unem + logPop + factor(month), data = .)
## Summary Output
summary(reg.2a)
## 95% CI
confint(reg.2a)
## Model 2 Seasons
reg.2b <- dta %>%
lm(logMilesNA ~ logGasReal + unem + logPop + factor(season), data = .)
## Summary Output
summary(reg.2b)
## 95% CI
confint(reg.2b)
## Saving the Residuals
dta$residual_errors  <- resid(reg.2a)
## Regressing Residuals
lag_err <- c(NA, dta$residual_errors[1:(length(dta$residual_errors)-1)])
knitr::include_graphics("time_1.png")
knitr::include_graphics("time_2.png")
knitr::include_graphics("time_3.png")
knitr::include_graphics("time_4.png")
## Error on Lagged Error Regression
reg.lag <- lm(dta$residual_errors ~ lag_err)
summary(reg.lag)
## Durbin-Watson
dwtest(reg.2a)
## Calculating Newey West Standard Errors
sqrt(diag(NeweyWest(reg.2a, lag=4, prewhite=FALSE, adjust=TRUE)))
## Checking t-stats
coef(reg.2a) / sqrt(diag(NeweyWest(reg.2a, lag=4, prewhite=FALSE, adjust=TRUE)))
## Cochrane-Orcutt Model
reg.orc <- cochrane.orcutt(reg.2a)
summary(reg.orc)
## "By Hand"
reg.2a <- dta %>%
lm(logMilesNA ~ logGasReal + unem + logPop + factor(month), data = .)
## Error on Lagged Error Regression
reg.lag <- lm(dta$residual_errors ~ lag_err)
rho <- summary(reg.lag)$coef[2]
## Lagging Each Variable
dta$lagmile <- dplyr::lag(dta$logMilesNA, ordered_by = dta$year)
dta$lag_gas <- dplyr::lag(dta$logGasReal, ordered_by = dta$year)
dta$lag_unem <- dplyr::lag(dta$unem, ordered_by = dta$year)
dta$lag_pop <- dplyr::lag(dta$logPop, ordered_by = dta$year)
dta$lag_month <- dplyr::lag(dta$month, ordered_by = dta$year)
## Rho-transforming
rho_mile <- dta$logMilesNA - rho*dta$lagmile
rho_gas <- dta$logGasReal - rho*dta$lag_gas
rho_unem <- dta$unem - rho*dta$lag_unem
rho_pop <- dta$logPop - rho*dta$lag_pop
rho_month <- dta$month - rho*dta$lag_month
## Running rho-transformed model
rho_trans_model <- lm(rho_mile ~ rho_gas + rho_unem + rho_pop + factor(rho_month))
summary(rho_trans_model)
## Distributed Lag Model
## Creating lagged miles variable
dta$lagmile <- dplyr::lag(dta$logMilesNA, ordered_by = dta$year)
reg.2.dyn <- lm(logMilesNA ~ lagmile + logGasReal + unem + logPop + factor(month) , data=dta)
summary(reg.2.dyn)
## Saving the Residuals
residual_errors  <- resid(reg.2.dyn)
## Regressing Residuals
lag_err <- c(NA, residual_errors[1:(length(residual_errors)-1)])
knitr::include_graphics("time_5.png")
## Change in miles
delta_miles <- dta$logMilesNA - lagmile
## Change in miles
delta_miles <- dta$logMilesNA - dta$lagmile
## Lagged Change in Miles
lag_delta_miles <- c(NA, delta_miles[1:(length(lagmile)-1)])
## Lagged Change in Miles
lag_delta_miles <- c(NA, delta_miles[1:(length(dta$lagmile)-1)])
## Augmented Dickey-Fuller Test
aug_dickey_fuller <- lm(delta_miles ~ lagmile + dta$year + lag_delta_miles)
## Augmented Dickey-Fuller Test
aug_dickey_fuller <- lm(delta_miles ~ dta$lagmile + dta$year + lag_delta_miles)
summary(aug_dickey_fuller)
knitr::include_graphics("time_6.png")
knitr::include_graphics("time_7.png")
knitr::include_graphics("time_8.png")
knitr::include_graphics("time_9.png")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
knitr::include_graphics("time.png")
knitr::include_graphics("time.png")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
