[["index.html", "GOVT 8002 Shared Working Book Benjamin Reese 1 Introduction 1.1 Purpose of This Site 1.2 Loading Data", " GOVT 8002 Shared Working Book Benjamin Reese Zoom Link for Office Hours | bfr11@georgetown.edu 1 Introduction 1.1 Purpose of This Site The goal of this site is to have a place where you can look for examples of code. Think of this site as a log of all of the topics we cover in class and in lab sessions. I will make updates throughout the semester as we cover more advanced material. I hope this proves to be a helpful and beneficial resource and offer an easier to access format than the Google Doc. Let me know if any of this code doesn’t run correctly or if you have any questions or issues! 1.2 Loading Data The easiest way to load data into R and ensure you have the correct file path is to create a folder on your computer for each assignment and place the datasets directly into that folder. Create a folder on your computer for each new analysis Download your Data and move the file to your newly created folder Then open RStudio Click the project button in the top right corner Click new project Click existing directory Click browse and find the folder that you created Click create project Once your new project opens, click the blank page with a green plus sign icon in the top left corner under the file option Click R script to open a new script You should also be able to see your data file in the bottom right window of RStudio, click the file and follow the options depending on the file type Once your data is imported into R, the code that R automatically ran will be in the console window on the bottom left, copy and paste it to your fresh R script For example, in Lab 1, my code looked like: read_excel(\"Data/USstates.xlsx\") Run this copy and pasted line of code whenever you open the R Project and you will never have to worry about complicated file pathing commands I recommend using the assignment operator &lt;- to give your dataset a short and simple name like df, dta, or, if you are working with multiple datasets, name each something short and descriptive "],["lab-i-tidyverse-ols-review.html", "2 9/23 | Lab I: Tidyverse &amp; OLS Review 2.1 Join the data sets. 2.2 Create and add the following variables to your dataframe density, deaths per capita, cases per capita and vaccinated percent. 2.3 Estimate three regression models with deaths per capita on your selected day as the dependent variable. 2.4 Assess specific vaccines 2.5 Optional Lab 1b", " 2 9/23 | Lab I: Tidyverse &amp; OLS Review # Preparation library(tidyverse) library(readr) library(readxl) library(stargazer) library(car) 2.1 Join the data sets. Join the cases and vaccination data by date and state. Case data: United_States_COVID-19_Cases_and_Deaths_by_State_over_Time.csv Vaccination data: COVID-19_Vaccinations_in_the_United_States_Jurisdiction.csv Other state variables: USstates.xlsx Add the USstates.xlsx data and limit your dataframe to the states listed in USstates.xlsx. How do you know if your merge was successful? ## Loading Case Data case &lt;- read_csv(&quot;Data/United_States_COVID-19_Cases_and_Deaths_by_State_over_Time.csv&quot;) ## Loading Vax Data vax &lt;- read_csv(&quot;Data/COVID-19_Vaccinations_in_the_United_States_Jurisdiction.csv&quot;) ## Joining Case &amp; Vax case_vax &lt;- case %&gt;% left_join(vax, by = c(&quot;submission_date&quot; = &quot;Date&quot;, &quot;state&quot; = &quot;Location&quot;)) ## Adding in state variables states &lt;- read_excel(&quot;Data/USstates.xlsx&quot;) ## Joining all datasets to create df df &lt;- case_vax %&gt;% filter(state %in% states$stateAbbr) %&gt;% left_join(states, by = c(&quot;state&quot; = &quot;stateAbbr&quot;)) %&gt;% janitor::clean_names() ## making variable names lowercase with underscores ## Checking for only states count(tibble(unique(df$state))) ## # A tibble: 1 × 1 ## n ## &lt;int&gt; ## 1 51 ## View(df) To use janitor::clean_names() above, be sure to install the janitor package with install.packages(\"janitor\") 2.2 Create and add the following variables to your dataframe density, deaths per capita, cases per capita and vaccinated percent. For a specific day, show the top five states ranked by deaths per capita and calculate the average vaccinated per capita and the mean, minimum and maximum deaths per capita. ## Creating Variables df &lt;- df %&gt;% mutate(&quot;deaths_pc&quot; = 100000*new_death/pop2019, &quot;cases_pc&quot; = 100000*new_case/pop2019, &quot;vaxed_pct&quot; = series_complete_12plus_pop_pct/100, &quot;density&quot; = pop2019/(1000000*sq_miles)) ## Filtering to specific day df_day &lt;- df %&gt;% filter(submission_date == &quot;10/1/2021&quot;) ## Top five states by deaths per capita df_day %&gt;% arrange(desc(deaths_pc)) %&gt;% dplyr::select(submission_date, state, deaths_pc, cases_pc, vaxed_pct, density) %&gt;% slice(1:5) ## # A tibble: 5 × 6 ## submission_date state deaths_pc cases_pc vaxed_pct density ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 10/1/2021 WV 2.90 91.8 0.465 0.0000746 ## 2 10/1/2021 OH 2.81 53.3 0.588 0.000286 ## 3 10/1/2021 GA 1.49 31.5 0.537 0.000185 ## 4 10/1/2021 ID 1.34 99.5 0 0.0000216 ## 5 10/1/2021 ND 1.31 93.3 0.529 0.0000110 ## Mean vaxed per capita and mean, min, max of deaths per capita df_day %&gt;% summarise(mean_vaxed = mean(vaxed_pct), mean_deaths = mean(deaths_pc), min_deaths = min(deaths_pc), max_deaths = max(deaths_pc)) ## # A tibble: 1 × 4 ## mean_vaxed mean_deaths min_deaths max_deaths ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0.625 0.551 0 2.90 2.3 Estimate three regression models with deaths per capita on your selected day as the dependent variable. Your first model will have only Trump 2020 percent as an independent variable. Your second model will add vaccinated percent as an independent variable. Your third model will add density. Before you estimate the models, write down your expectations about what will happen in these models. ## Trump percent model ols.1 &lt;- lm(deaths_pc ~ trump2020_percent, data = df_day) summary(ols.1) ## ## Call: ## lm(formula = deaths_pc ~ trump2020_percent, data = df_day) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.88445 -0.31999 -0.09294 0.17142 2.18890 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -0.2412 0.3422 -0.705 0.4843 ## trump2020_percent 1.6103 0.6759 2.382 0.0211 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.573 on 49 degrees of freedom ## Multiple R-squared: 0.1038, Adjusted R-squared: 0.08552 ## F-statistic: 5.676 on 1 and 49 DF, p-value: 0.02112 ## Trump and Vax model ols.2 &lt;- lm(deaths_pc ~ trump2020_percent + vaxed_pct, data = df_day) summary(ols.2) ## ## Call: ## lm(formula = deaths_pc ~ trump2020_percent + vaxed_pct, data = df_day) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.8757 -0.2596 -0.1054 0.1314 2.1706 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1.5915 0.8539 1.864 0.0685 . ## trump2020_percent 0.3252 0.8514 0.382 0.7041 ## vaxed_pct -1.9208 0.8264 -2.324 0.0244 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.5489 on 48 degrees of freedom ## Multiple R-squared: 0.1945, Adjusted R-squared: 0.1609 ## F-statistic: 5.795 on 2 and 48 DF, p-value: 0.005569 ## Trump, Vax, and Density Model ols.3 &lt;- lm(deaths_pc ~ trump2020_percent + vaxed_pct + density, data = df_day) summary(ols.3) ## ## Call: ## lm(formula = deaths_pc ~ trump2020_percent + vaxed_pct + density, ## data = df_day) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.8859 -0.2580 -0.1098 0.1301 2.1695 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1.5157 1.0494 1.444 0.1553 ## trump2020_percent 0.4184 1.1311 0.370 0.7131 ## vaxed_pct -1.8785 0.8991 -2.089 0.0421 * ## density 8.2056 64.6874 0.127 0.8996 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.5546 on 47 degrees of freedom ## Multiple R-squared: 0.1948, Adjusted R-squared: 0.1434 ## F-statistic: 3.789 on 3 and 47 DF, p-value: 0.01628 The results of ols.1, using October 1st, 2021 as the day, indicate that area with higher support for Donald Trump have more deaths per capita, specifically, a one percentage increase in Trump’s 2020 vote share, on average, increases deaths per capita by 1.6. This is a classic case of omitted variable bias, however. Once we control for the percent vaxed in an area, the trump2020_percent loses statistical significance. We can see in the second model that the coefficient on the Trump vote share variable greatly decreases and is no longer statistically significant at conventional thresholds. vaxed_pct is statistically significant at the \\(p&lt;.05\\) level and indicates that a one percent increase in an areas vaccination rate corresponds, on average, with a 1.9 decrease in deaths per capita, holding trump2020_percent constant. This result stands even when controlling for an areas density as shown in model 3. 2.4 Assess specific vaccines Create and add vaccinated percent by state for each of the Pfizer, Modern and Janssen (which is Johnson and Johnson) vaccines. Use pop2019 for population Use Series_Complete_Moderna_18Plus, Series_Complete_Janssen_18Plus and Series_Complete_Pfizer_18Plus for the vaccination totals. Estimate a model in which deaths per capita is a function of all three vaccination rates. Explain what the results mean, especially in light of the results above for overall vaccination results. Explain how one would compare the efficacy of the individual vaccines (e.g., whether the Moderna vaccine works better than the Johnson and Johnson vaccine). Many answers would work here. ## Creating vaxed percent variables for different vaccines df &lt;- df %&gt;% mutate(vaxed_pct_moderna = series_complete_moderna_18plus/(100*pop2019), vaxed_pct_jans = series_complete_janssen_18plus/(100*pop2019), vaxed_pct_pfizer = series_complete_pfizer_18plus/(100*pop2019)) ## Filtering to day df_day = df %&gt;% filter(submission_date == &quot;10/1/2021&quot;) ## Running Model ols.4 &lt;- lm(deaths_pc ~ vaxed_pct_jans + vaxed_pct_moderna + vaxed_pct_pfizer, data = df_day) summary(ols.4) ## ## Call: ## lm(formula = deaths_pc ~ vaxed_pct_jans + vaxed_pct_moderna + ## vaxed_pct_pfizer, data = df_day) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.93880 -0.29403 -0.05261 0.15284 2.13378 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.373 0.679 3.496 0.00104 ** ## vaxed_pct_jans -570.304 1174.009 -0.486 0.62938 ## vaxed_pct_moderna -359.090 586.494 -0.612 0.54331 ## vaxed_pct_pfizer -321.407 333.845 -0.963 0.34060 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.5544 on 47 degrees of freedom ## Multiple R-squared: 0.1954, Adjusted R-squared: 0.1441 ## F-statistic: 3.806 on 3 and 47 DF, p-value: 0.01599 Lab I OLS Results Model 1 Model 2 Model 3 Model 4 (1) (2) (3) (4) trump2020_percent 1.610 0.325 0.418 (0.676) (0.851) (1.131) t = 2.382 t = 0.382 t = 0.370 vaxed_pct -1.921 -1.879 (0.826) (0.899) t = -2.324 t = -2.089 density 8.206 (64.687) t = 0.127 vaxed_pct_jans -570.304 (1,174.009) t = -0.486 vaxed_pct_moderna -359.090 (586.494) t = -0.612 vaxed_pct_pfizer -321.407 (333.845) t = -0.963 Constant -0.241 1.591 1.516 2.374 (0.342) (0.854) (1.049) (0.679) t = -0.705 t = 1.864 t = 1.444 t = 3.496 Observations 51 51 51 51 R2 0.104 0.194 0.195 0.195 Residual Std. Error 0.573 (df = 49) 0.549 (df = 48) 0.555 (df = 47) 0.554 (df = 47) F Statistic 5.676** (df = 1; 49) 5.795*** (df = 2; 48) 3.789** (df = 3; 47) 3.806** (df = 3; 47) Note: p&lt;0.1; p&lt;0.05; p&lt;0.01 The results are no longer statistically significance due to multicollinearity. There is a high degree of correlation between the rates each vaccine were administered which is contributing to the large standard errors. The p-value of the \\(F\\)-statistic tells us the probability that we would see a result this extreme given all of the coefficients on the vaccines are actually zero, reinforcing our findings above. This is not necessary for this lab, but to assess the efficacy of one vaccine over another, we could conduct an \\(F\\) test. Remember, the formula for F-tests is: \\[F_{q, N-k} = \\frac{(R^2_{Unrestricted}-R^2_{Restricted})\\setminus q}{(1-R^2_{Unrestricted}) \\setminus (N-k)}\\] As an example, I will evaluate if \\(\\beta_1 = \\beta_2\\) in the following model: \\(deaths_pc_{it} = \\beta_0 + \\beta_1jans_{it} + \\beta_2moderna_{it} + \\beta_3pfizer_{it} + \\epsilon_i\\) which is ols.4 estimated above that examines the relationship between the rate of vaccination for each vaccine and deaths per capita in state \\(i\\) and day \\(t\\). We can do this manually, but library(car) makes it easy. See the code below: ## F Test linearHypothesis(ols.4, c(&quot;vaxed_pct_jans = vaxed_pct_moderna&quot;)) ## Linear hypothesis test ## ## Hypothesis: ## vaxed_pct_jans - vaxed_pct_moderna = 0 ## ## Model 1: restricted model ## Model 2: deaths_pc ~ vaxed_pct_jans + vaxed_pct_moderna + vaxed_pct_pfizer ## ## Res.Df RSS Df Sum of Sq F Pr(&gt;F) ## 1 48 14.451 ## 2 47 14.445 1 0.0056829 0.0185 0.8924 We can see that the \\(p\\)-value is not statistically significant, meaning that we cannot reject the null hypothesis that \\(\\beta_1\\) is statistically significantly different than \\(\\beta_2\\). 2.5 Optional Lab 1b This lab is optional and just for some additional practice. 2.5.1 Load the World Values Survey data from “Data/WV7_small.csv” and the CountryCode data from “Data/Country codes for WVS wave 7.csv”. The codebook for the World Values Survey data is available at http://www.worldvaluessurvey.org/WVSDocumentationWV7.jsp The variables in WV_small were created as follows: Satisfaction with your life from 1 (completely dissatisfied) to 10 (completely satisfied) (V23) Income: a country-specific scale ranging from 1 (lowest income category) to 10 (highest income category) (V239 in the dataset) Education: a scale ranging from 1 (no formal education) to 9 (a degree from a university) (V248 in the dataset) Country: based on V2 in the dataset. See “Country codes for WVS wave 6.csv” Conservatism: self-identified political conservatism from 1 (most liberal) to 10 (most conservative) (V95 in the data set) Male: a dummy variable indicating male (V240) Religious: Indicating how often the individual attends religious services ranging from 1 (almost never) to 7 (more than once a week) (this is a re-coding of V145 that had the polarity reversed, but is harder to interpret) Marital: Marital status 1 = Married 2 = Living together as married 3 = Divorced 4 = Separated 5 = Widowed 6 = Single Survey year: year survey taken Birth year: respondent’s year of birth ## World Values Dataset wv &lt;- read_csv(&quot;Data/WV7_small.csv&quot;) ## Country Codes cc &lt;- read_csv(&quot;Data/Country codes for WVS wave 7.csv&quot;) 2.5.2 Join the country name from the CountryCode data to the World Values data. The country code is V2 in CountryCode and B_Country in the World Values data. Create two data objects of the countries in and not in the World Values data. Display the first 10 countries for each list. ## Left Join wv &lt;- wv %&gt;% left_join(cc, by = c(&quot;B_COUNTRY&quot; = &quot;V2&quot;)) ## Showing countries in countries_in_wv &lt;- tibble(unique(wv$country)) countries_in_wv[1:10,] ## # A tibble: 10 × 1 ## `unique(wv$country)` ## &lt;chr&gt; ## 1 Ethiopia ## 2 Zimbabwe ## 3 Tajikistan ## 4 Pakistan ## 5 Bangladesh ## 6 Nigeria ## 7 Myanmar ## 8 Kyrgyzstan ## 9 Nicaragua ## 10 Viet Nam ## Anti Join countries_out &lt;- cc %&gt;% anti_join(wv, by = c(&quot;V2&quot; = &quot;B_COUNTRY&quot;)) %&gt;% filter(V2 &gt; 0) ## Countries not in wv countries_out %&gt;% slice(1:10) ## # A tibble: 10 × 2 ## V2 country ## &lt;dbl&gt; &lt;chr&gt; ## 1 8 Albania ## 2 12 Algeria ## 3 16 American Samoa ## 4 24 Angola ## 5 28 Antigua ## 6 31 Azerbaijan ## 7 40 Austria ## 8 48 Bahrain ## 9 51 Armenia ## 10 52 Barbados 2.5.3 Using pipes, calculate the percent immigrant in every country. Show the highest 10 and lowest 10 countries. (Be sure to think through what the variable in the data set means.) ## Recoding Immigrant Variable wv$Immigrant &lt;- wv$Immigrant-1 ## 10 Highest wv %&gt;% group_by(country) %&gt;% summarize(pct_imm = mean(Immigrant, na.rm=T), n=n())%&gt;% arrange(desc(pct_imm)) %&gt;% slice(1:10) ## # A tibble: 10 × 3 ## country pct_imm n ## &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; ## 1 Andorra 0.723 1004 ## 2 Macao 0.417 1023 ## 3 Hong Kong 0.261 2075 ## 4 New Zealand 0.227 1057 ## 5 China 0.221 3036 ## 6 Cyprus (G) 0.22 1000 ## 7 Germany 0.139 1528 ## 8 Jordan 0.138 1203 ## 9 Greece 0.106 1200 ## 10 United States 0.106 2596 ## 10 Lowest ## Percent immigrant in each country wv %&gt;% group_by(country) %&gt;% summarize(pct_imm = mean(Immigrant, na.rm=T), n=n())%&gt;% arrange(pct_imm) %&gt;% slice(1:10) ## # A tibble: 10 × 3 ## country pct_imm n ## &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; ## 1 Bangladesh 0 1200 ## 2 Iraq 0 1200 ## 3 Mexico 0 1739 ## 4 Myanmar 0 1200 ## 5 Thailand 0 1500 ## 6 Viet Nam 0 1200 ## 7 Egypt 0.000833 1200 ## 8 Indonesia 0.000938 3200 ## 9 Romania 0.00159 1257 ## 10 Ethiopia 0.00163 1230 2.5.4 We’re now going to give some examples of the kind of data we can calculate. Think about how you would do this in Excel (but don’t actually do it!) and then calculate in R. Calculate the percent of immigrants who are men, by country and show the highest and lowest 10 countries. ## 10 Highest wv %&gt;% filter(Male==1) %&gt;% group_by(country) %&gt;% summarize(pct_imm = mean(Immigrant, na.rm=T), n=n()) %&gt;% arrange(desc(pct_imm)) %&gt;% slice(1:10) ## # A tibble: 10 × 3 ## country pct_imm n ## &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; ## 1 Andorra 0.784 495 ## 2 Macao 0.443 572 ## 3 Hong Kong 0.257 1123 ## 4 China 0.223 1667 ## 5 New Zealand 0.220 594 ## 6 Cyprus (G) 0.191 518 ## 7 Jordan 0.154 596 ## 8 Germany 0.145 785 ## 9 Greece 0.111 637 ## 10 United States 0.103 1206 ## 10 Lowest wv %&gt;% filter(Male==1) %&gt;% group_by(country) %&gt;% summarize(pct_imm = mean(Immigrant, na.rm=T), n=n()) %&gt;% arrange(pct_imm) %&gt;% slice(1:10) ## # A tibble: 10 × 3 ## country pct_imm n ## &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; ## 1 Bangladesh 0 608 ## 2 Egypt 0 579 ## 3 Iraq 0 592 ## 4 Mexico 0 866 ## 5 Myanmar 0 599 ## 6 Nigeria 0 604 ## 7 Thailand 0 793 ## 8 Viet Nam 0 655 ## 9 Indonesia 0.00114 1754 ## 10 Romania 0.00132 760 2.5.5 Group by marital status and country and show the percent of people in each category who are men. Show the results for a country of your choice and briefly discuss what it means when the percentages in each category are not roughly 50 percent. Recall that the coding for the Marital variable is 1 = Married 2 = Living together as married 3 = Divorced 4 = Separated 5 = Widowed 6 = Single. wv %&gt;% group_by(country, Marital) %&gt;% summarize(male_pct = mean(Male, na.rm=T), n=n()) %&gt;% filter(country == &quot;United States&quot;) ## # A tibble: 7 × 4 ## # Groups: country [1] ## country Marital male_pct n ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 United States 1 0.431 1296 ## 2 United States 2 0.548 197 ## 3 United States 3 0.493 278 ## 4 United States 4 0.5 54 ## 5 United States 5 0.560 84 ## 6 United States 6 0.477 677 ## 7 United States NA 0.6 10 2.5.6 Come up with your own alternatives: think about some possible subset of people and some information we have about them and see if you can write code to capture that information. wv %&gt;% group_by(country, Income) %&gt;% summarize(imm_pct = mean(Immigrant, na.rm=T), n=n()) %&gt;% filter(country == &quot;United States&quot;) ## # A tibble: 11 × 4 ## # Groups: country [1] ## country Income imm_pct n ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 United States 1 0.106 123 ## 2 United States 2 0.072 128 ## 3 United States 3 0.0871 268 ## 4 United States 4 0.0867 373 ## 5 United States 5 0.110 599 ## 6 United States 6 0.111 468 ## 7 United States 7 0.110 370 ## 8 United States 8 0.142 151 ## 9 United States 9 0.111 36 ## 10 United States 10 0.227 22 ## 11 United States NA 0.136 58 "],["lab-ii-dummy-variables-career-data.html", "3 9/30 | Lab II: Dummy Variables &amp; Career Data 3.1 Use OLS to estimate the difference in happiness (the “happy” variable) for married versus unmarried people. Then use the t test function to assess the difference in happiness by gender (see the Computing Corner in Chapter 6 of the book). Discuss similarities and differences in OLS model and t test function results 3.2 Use OLS with robust standard errors to estimate the difference in happiness for married and unmarried people. Then use the t test function with unequal variances to assess the difference in happiness by marital status. Discuss similarities and differences in OLS model and t test function results. 3.3 Create an interaction between married and age. Estimate a model that explains happiness as a function of age and marital status, allowing for the age effect to differ according to marital status. (For simplicity, we use only married and unmarried for marital status.) What is the effect of age for unmarried people? For married people? 3.4 Estimate separate models explaining happiness in terms of age for married and unmarried people. Comment on similarities and differences compared to results immediately above for (i) the estimated effect of age and (ii) the intercept. 3.5 Marianne Bertrand wrote an article called ``Work on Women’s Work is Never Done: Career, Family, and the Well-Being of College-Educated Women’’ published in the American Economic Review: Papers &amp; Proceedings 2013, 103(3): 244–250. She analyzed the effect of careers and family on college-educated women. She defines a career variable that is 1 if someone’s earnings are above the twenty-fifth percentile in the relevant year and age group. Estimate a model in which happiness is a function of career, being married and an interaction of career and married (“careermarried”). To match Betrand’s analysis, limit the data to only to college educated (dta$educat==4) women (dta$sex==2). Interpret the estimated average happiness for the four types of women implied by this analysis. 3.6 The GSS provides a race variable (dta$race). The variable equals 1 for white respondents, 2 for black respondents and 3 for everyone else. Add race to the above model and interpret the coefficients related to race. Estimate another model with a different reference category and explain coefficients across the two models. 3.7 Estimate a model similar to the above, but for a different group of your choice (e.g., limit by race or gender or education) and feel free to include different covariates.", " 3 9/30 | Lab II: Dummy Variables &amp; Career Data ## Packages library(knitr) library(car) library(AER) library(stargazer) ## Data load(&quot;~/GOVT702/Data/Ch6_Lab_CareerHappiness.RData&quot;) We will use General Social Survey data for this lab. The key variables we will use are happy: 3 very happy, 2 pretty happy, 1 not too happy married: 1 for currently married (based on dta$marital, which is 1 for married, 2 for widowed, 3 for divorced, 4 for separated, 5 for never married) sex: 1 for men, 2 for women edcat: 1 for less than high school, 2 for high school, 3 for some college and 4 for college graduate race: 1 for white, 2 for black, 3 for other races (self-identified, first race mentioned) 3.1 Use OLS to estimate the difference in happiness (the “happy” variable) for married versus unmarried people. Then use the t test function to assess the difference in happiness by gender (see the Computing Corner in Chapter 6 of the book). Discuss similarities and differences in OLS model and t test function results ## Difference in Happiness with OLS model_1 &lt;- lm(happy~married, data=dta) summary(model_1) ## ## Call: ## lm(formula = happy ~ married, data = dta) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.3227 -0.3227 -0.0249 0.6773 0.9751 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.024903 0.006033 335.64 &lt;2e-16 *** ## married 0.297810 0.007621 39.08 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.5984 on 26346 degrees of freedom ## (2442 observations deleted due to missingness) ## Multiple R-squared: 0.05478, Adjusted R-squared: 0.05475 ## F-statistic: 1527 on 1 and 26346 DF, p-value: &lt; 2.2e-16 confint(model_1) ## 2.5 % 97.5 % ## (Intercept) 2.013079 2.0367282 ## married 0.282872 0.3127481 ## With t.test() t.test(dta$happy[dta$married==1], dta$happy[dta$married==0]) ## ## Welch Two Sample t-test ## ## data: dta$happy[dta$married == 1] and dta$happy[dta$married == 0] ## t = 38.977, df = 20513, p-value &lt; 2.2e-16 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## 0.2828336 0.3127865 ## sample estimates: ## mean of x mean of y ## 2.322714 2.024903 3.2 Use OLS with robust standard errors to estimate the difference in happiness for married and unmarried people. Then use the t test function with unequal variances to assess the difference in happiness by marital status. Discuss similarities and differences in OLS model and t test function results. ## model_1 with Robust Standard Errors coeftest(model_1, vcov. = vcovHC(model_1, type = &quot;HC1&quot;)) ## ## t test of coefficients: ## ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.0249034 0.0060709 333.541 &lt; 2.2e-16 *** ## married 0.2978101 0.0076407 38.977 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # t-test, without assuming equal variance t.test(dta$happy[dta$married==1], dta$happy[dta$married==0], var.equal = FALSE) ## ## Welch Two Sample t-test ## ## data: dta$happy[dta$married == 1] and dta$happy[dta$married == 0] ## t = 38.977, df = 20513, p-value &lt; 2.2e-16 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## 0.2828336 0.3127865 ## sample estimates: ## mean of x mean of y ## 2.322714 2.024903 3.3 Create an interaction between married and age. Estimate a model that explains happiness as a function of age and marital status, allowing for the age effect to differ according to marital status. (For simplicity, we use only married and unmarried for marital status.) What is the effect of age for unmarried people? For married people? ## Interaction Term dum_interact &lt;- dta$married*dta$age ## Model 2 model_2 &lt;- lm(happy~age + married + dum_interact, data=dta) summary(model_2) ## ## Call: ## lm(formula = happy ~ age + married + dum_interact, data = dta) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.32925 -0.32408 -0.04825 0.67451 1.02224 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.1300310 0.0270265 78.813 &lt; 2e-16 *** ## age -0.0028199 0.0007067 -3.990 6.61e-05 *** ## married 0.2109524 0.0351041 6.009 1.89e-09 *** ## dum_interact 0.0023504 0.0009036 2.601 0.0093 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.5982 on 26344 degrees of freedom ## (2442 observations deleted due to missingness) ## Multiple R-squared: 0.05538, Adjusted R-squared: 0.05527 ## F-statistic: 514.8 on 3 and 26344 DF, p-value: &lt; 2.2e-16 ## or model_2b &lt;- lm(happy~married*age, data=dta) summary(model_2b) ## ## Call: ## lm(formula = happy ~ married * age, data = dta) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.32925 -0.32408 -0.04825 0.67451 1.02224 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.1300310 0.0270265 78.813 &lt; 2e-16 *** ## married 0.2109524 0.0351041 6.009 1.89e-09 *** ## age -0.0028199 0.0007067 -3.990 6.61e-05 *** ## married:age 0.0023504 0.0009036 2.601 0.0093 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.5982 on 26344 degrees of freedom ## (2442 observations deleted due to missingness) ## Multiple R-squared: 0.05538, Adjusted R-squared: 0.05527 ## F-statistic: 514.8 on 3 and 26344 DF, p-value: &lt; 2.2e-16 The effect of age is \\(-0.00281\\) for unmarried people and \\(-0.00281 + 0.002350 = -0.0004699\\) for married people. The intercept is \\(2.13\\) for unmarried people and \\(2.13 + 0.2109 = 2.3409\\) for married people. 3.4 Estimate separate models explaining happiness in terms of age for married and unmarried people. Comment on similarities and differences compared to results immediately above for (i) the estimated effect of age and (ii) the intercept. ## Model 3a model_3a &lt;- lm(happy~age, data=subset(dta, married==1)) summary(model_3a) ## ## Call: ## lm(formula = happy ~ age, data = subset(dta, married == 1)) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.3293 -0.3250 -0.3189 0.6754 0.6844 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.3409834 0.0223240 104.864 &lt;2e-16 *** ## age -0.0004695 0.0005612 -0.837 0.403 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.5961 on 16508 degrees of freedom ## (1385 observations deleted due to missingness) ## Multiple R-squared: 4.24e-05, Adjusted R-squared: -1.817e-05 ## F-statistic: 0.7 on 1 and 16508 DF, p-value: 0.4028 ## and model_3b &lt;- lm(happy~age, data=subset(dta, married==0)) summary(model_3b) ## ## Call: ## lm(formula = happy ~ age, data = subset(dta, married == 0)) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.05953 -0.05389 -0.02570 0.01096 1.02224 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.1300310 0.0271844 78.355 &lt; 2e-16 *** ## age -0.0028199 0.0007108 -3.967 7.32e-05 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.6017 on 9836 degrees of freedom ## (1053 observations deleted due to missingness) ## Multiple R-squared: 0.001598, Adjusted R-squared: 0.001496 ## F-statistic: 15.74 on 1 and 9836 DF, p-value: 7.322e-05 The results here are the same as above: for unmarried people, the effect of age is \\(-0.00281\\) and the intercept is \\(2.130\\). The effect of age for married people also the same: \\(-0.000469\\), with an intercept of \\(2.3409\\). 3.5 Marianne Bertrand wrote an article called ``Work on Women’s Work is Never Done: Career, Family, and the Well-Being of College-Educated Women’’ published in the American Economic Review: Papers &amp; Proceedings 2013, 103(3): 244–250. She analyzed the effect of careers and family on college-educated women. She defines a career variable that is 1 if someone’s earnings are above the twenty-fifth percentile in the relevant year and age group. Estimate a model in which happiness is a function of career, being married and an interaction of career and married (“careermarried”). To match Betrand’s analysis, limit the data to only to college educated (dta$educat==4) women (dta$sex==2). Interpret the estimated average happiness for the four types of women implied by this analysis. model_4 &lt;- lm(happy ~ career*married, data=dta[dta$sex==2 &amp; dta$educat==4,]) summary(model_4) ## ## Call: ## lm(formula = happy ~ career * married, data = dta[dta$sex == ## 2 &amp; dta$educat == 4, ]) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.4215 -0.4214 -0.1247 0.5786 0.8753 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.12470 0.01997 106.406 &lt; 2e-16 *** ## career 0.09204 0.02985 3.084 0.00206 ** ## married 0.29676 0.02503 11.855 &lt; 2e-16 *** ## career:married -0.09923 0.04023 -2.466 0.01369 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.5739 on 3595 degrees of freedom ## (400 observations deleted due to missingness) ## Multiple R-squared: 0.04765, Adjusted R-squared: 0.04685 ## F-statistic: 59.96 on 3 and 3595 DF, p-value: &lt; 2.2e-16 The four groups are unmarried women without careers, married women with careers, married women without careers, and unmarried women without careers. College-educated women that have no careers and are not married have an average happiness of \\(2.12\\). College-educated women with careers but not married have an average happiness of \\(2.12 + 0.09 = 2.21\\). College-educated women with no career but are married have average happiness of \\(2.12 + 0.29 = 2.41\\). College-educated women that are both married and have careers have average happiness of \\(2.12 + 0.092 + 0.29 -0.099 = 2.4\\). 3.6 The GSS provides a race variable (dta$race). The variable equals 1 for white respondents, 2 for black respondents and 3 for everyone else. Add race to the above model and interpret the coefficients related to race. Estimate another model with a different reference category and explain coefficients across the two models. ## First Race Model with White as Reference model_5 &lt;- lm(happy ~ career*married + factor(race), data=dta[dta$sex==2 &amp; dta$educat==4,]) summary(model_5) ## ## Call: ## lm(formula = happy ~ career * married + factor(race), data = dta[dta$sex == ## 2 &amp; dta$educat == 4, ]) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.4359 -0.4329 -0.1575 0.5641 1.0085 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.15746 0.02077 103.867 &lt; 2e-16 *** ## career 0.08830 0.02974 2.969 0.00301 ** ## married 0.27847 0.02518 11.060 &lt; 2e-16 *** ## factor(race)2 -0.16593 0.03267 -5.079 3.98e-07 *** ## factor(race)3 -0.10051 0.04036 -2.491 0.01280 * ## career:married -0.09132 0.04010 -2.277 0.02283 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.5717 on 3593 degrees of freedom ## (400 observations deleted due to missingness) ## Multiple R-squared: 0.05555, Adjusted R-squared: 0.05424 ## F-statistic: 42.27 on 5 and 3593 DF, p-value: &lt; 2.2e-16 ## Second Race Model with Other as the Reference Category model_5b &lt;- lm(happy ~ career*married + relevel(factor(race), ref = &quot;3&quot;), data=dta[dta$sex==2 &amp; dta$educat==4,]) summary(model_5b) ## ## Call: ## lm(formula = happy ~ career * married + relevel(factor(race), ## ref = &quot;3&quot;), data = dta[dta$sex == 2 &amp; dta$educat == 4, ]) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.4359 -0.4329 -0.1575 0.5641 1.0085 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.05695 0.04261 48.273 &lt; 2e-16 *** ## career 0.08830 0.02974 2.969 0.00301 ** ## married 0.27847 0.02518 11.060 &lt; 2e-16 *** ## relevel(factor(race), ref = &quot;3&quot;)1 0.10051 0.04036 2.491 0.01280 * ## relevel(factor(race), ref = &quot;3&quot;)2 -0.06542 0.04972 -1.316 0.18835 ## career:married -0.09132 0.04010 -2.277 0.02283 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.5717 on 3593 degrees of freedom ## (400 observations deleted due to missingness) ## Multiple R-squared: 0.05555, Adjusted R-squared: 0.05424 ## F-statistic: 42.27 on 5 and 3593 DF, p-value: &lt; 2.2e-16 Both results indicated white college-educated women are both \\(0.16\\) higher on the happiness variable than African-American college-educated women and \\(0.10\\) higher than other college-educated women of other races. Even though the coefficient on the other race variables change across specifications, our interpretation of the results does not change; the change is due solely to the change in reference category. 3.7 Estimate a model similar to the above, but for a different group of your choice (e.g., limit by race or gender or education) and feel free to include different covariates. No wrong answers here (mostly) This model explores the how commute times affect happiness. I specifically think that time commuting will - conditionally - lower a person’s happiness if it means they are away from their families. Because of this, I create an interaction term between commuting and marriage and estimate the effects. ## Commuting Model on Adults model_6 &lt;- lm(happy ~ commute*married, data=dta[dta$age&gt;18,]) summary(model_6) ## ## Call: ## lm(formula = happy ~ commute * married, data = dta[dta$age &gt; ## 18, ]) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.30339 -0.29480 -0.05136 0.69947 0.98484 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.0513587 0.0553465 37.064 &lt; 2e-16 *** ## commute -0.0003732 0.0020973 -0.178 0.858816 ## married 0.2520331 0.0681019 3.701 0.000231 *** ## commute:married -0.0001996 0.0026100 -0.076 0.939047 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.5647 on 726 degrees of freedom ## (28060 observations deleted due to missingness) ## Multiple R-squared: 0.04227, Adjusted R-squared: 0.03831 ## F-statistic: 10.68 on 3 and 726 DF, p-value: 7.076e-07 My theory is not supported by this model. I found no significant effect for those who commute longer and no significant conditional effect of happiness for those who commute long hours and are married. I did find support that marriage in general makes a person happier, though this should not be considered a causal effect. "],["lab-iii-panel-data.html", "4 2/6 | Lab III: Panel Data 4.1 Load the data from OxCGRT_latest.csv 4.2 Data Organization 4.3 Use the lag function in dplyr to create lagged variables for cases and deaths. Also create “difference” (e.g., dCases) that is the change in cases for each state by date. Check to make sure it worked. 4.4 Merge the above data frame to data in USstates.xlsx 4.5 Write in notation and estimate a pooled model of total cases as a function of state policy. Discuss possible bias. 4.6 Write in notation and estimate a one-way fixed effect model where the fixed effect is state. Are you still worried about bias? 4.7 Write in notation and estimate a two-way fixed effect model where the fixed effects are state and date. Does this model address the source of bias identified earlier? 4.8 Test a model with robust-clustered standard errors. Do the results change at all? 4.9 Load in the Texas School Board Data and take a look at the variables. The next few questions are from exercise 5 in Bailey (2021). The basic thoery of the paper is that teachers unions will have less influence on school board members when turnout is greater since a wider swath of voters (non-teachers) will be voting. You can read the abstract below. 4.10 Write in notation and estimate the pooled model of the effect of OnCycle on LnAvgSalary. 4.11 Write in notation and estimate a difference-in-difference model of the effect of OnCycle on LnAvgSalary. What is the key coefficient that we are interested in?", " 4 2/6 | Lab III: Panel Data # Load packages used in this session of R library(knitr) library(tidyverse) library(lubridate) library(fixest) library(stringr) library(readxl) In this lab we will estimate standard panel data models on covid policy and cases/deaths in U.S. states. This is not a full-fledged analysis, but rather an initial exploration of the data that illustrates how fixed effects models work. We will also implement a difference-in-difference model to measure the effect of changing the time of an election on teacher salaries. 4.1 Load the data from OxCGRT_latest.csv Oxford provides data on covid deaths/cases and policy variables by day by state. For more background, see this data archive or this story that uses the data. We will use a variable called GovernmentResponseIndex. For details, see this. (And feel free to experiment with the other measures.) 4.2 Data Organization Load the OxCGRT_latest.csv data Limit it to U.S. states and DC (CountryName == \"United States\" &amp; RegionName!=\"NA\" &amp; RegionCode!=\"US_VI\") Select the following variables: RegionName, RegionCode, Date, GovernmentResponseIndex_Average, ConfirmedCases and ConfirmedDeaths Add a variable to this data frame using the following code (this variable will help us when merging below) ## Loading Covid Data covid &lt;- read_csv(&quot;Data/OxCGRT_USA_latest.csv&quot;) ## Cleaning &amp; Wrangling Covid Data df &lt;- covid %&gt;% filter(CountryName == &quot;United States&quot; &amp; RegionName!=&quot;NA&quot; &amp; RegionCode!=&quot;US_VI&quot;) %&gt;% mutate(Date=ymd(Date), GovernmentResponseIndex = GovernmentResponseIndex_Average) %&gt;% dplyr::select(RegionName, RegionCode, Date, GovernmentResponseIndex, ConfirmedCases, ConfirmedDeaths) %&gt;% mutate(&quot;RegionCode&quot; = str_replace_all(string = RegionCode, pattern = &quot;US_&quot;, replacement = &quot;&quot; )) Show the first three variables of the first three lines of this data frame. head(df[1:3,1:3]) ## # A tibble: 3 × 3 ## RegionName RegionCode Date ## &lt;chr&gt; &lt;chr&gt; &lt;date&gt; ## 1 Alaska AK 2020-01-01 ## 2 Alaska AK 2020-01-02 ## 3 Alaska AK 2020-01-03 4.3 Use the lag function in dplyr to create lagged variables for cases and deaths. Also create “difference” (e.g., dCases) that is the change in cases for each state by date. Check to make sure it worked. ## Creating lagged and change in cases df2 &lt;- df %&gt;% group_by(RegionCode) %&gt;% mutate(laggedcase = dplyr::lag(ConfirmedCases, order_by = Date), laggeddeaths = dplyr::lag(ConfirmedDeaths, order_by = Date), dcases = (ConfirmedCases-laggedcase), ddeaths = (ConfirmedDeaths-laggeddeaths)) 4.4 Merge the above data frame to data in USstates.xlsx Merge by state abbreviation Create percapita measures of change in deaths and cases (e.g. “deathsPC” = 10000*dDeaths/pop2019). ## Reading in State Data states &lt;- read_excel(&quot;Data/USstates.xlsx&quot;) ## Joining and creating change in deaths and cases per capita df3 &lt;- df2 %&gt;% left_join(states, by = c(&quot;RegionCode&quot; = &quot;stateAbbr&quot;)) %&gt;% mutate(deaths_pc = 10000*ddeaths/pop2019, cases_pc = 10000*dcases/pop2019) 4.5 Write in notation and estimate a pooled model of total cases as a function of state policy. Discuss possible bias. The model is: \\[confirmed\\_cases_{it} = \\beta_0 + \\beta_1average\\_response\\_index_{it} + \\epsilon_{it}\\] ## Pooled Model pooled_covid_model &lt;- lm(ConfirmedCases~GovernmentResponseIndex, data = df3) summary(pooled_covid_model) ## ## Call: ## lm(formula = ConfirmedCases ~ GovernmentResponseIndex, data = df3) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1632719 -624780 -388606 191235 10944694 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1730790 20055 86.30 &lt;2e-16 *** ## GovernmentResponseIndex -18824 409 -46.03 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1369000 on 54823 degrees of freedom ## (1071 observations deleted due to missingness) ## Multiple R-squared: 0.0372, Adjusted R-squared: 0.03718 ## F-statistic: 2118 on 1 and 54823 DF, p-value: &lt; 2.2e-16 4.6 Write in notation and estimate a one-way fixed effect model where the fixed effect is state. Are you still worried about bias? The model is: \\[confirmed\\_cases_{it} = \\beta_0 + \\beta_1average\\_response\\_index_{it} + \\alpha_{i} + \\epsilon_{it}\\] ## One-Way Model one_way &lt;- feols(ConfirmedCases~GovernmentResponseIndex | RegionCode, data = df3, vcov = &quot;iid&quot;) ## NOTE: 1,071 observations removed because of NA values (LHS: 1,071, RHS: 1,071). summary(one_way) ## OLS estimation, Dep. Var.: ConfirmedCases ## Observations: 54,825 ## Fixed-effects: RegionCode: 51 ## Standard-errors: IID ## Estimate Std. Error t value Pr(&gt;|t|) ## GovernmentResponseIndex -22865.8 297.783 -76.7867 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## RMSE: 966,135.8 Adj. R2: 0.520077 ## Within R2: 0.097186 4.7 Write in notation and estimate a two-way fixed effect model where the fixed effects are state and date. Does this model address the source of bias identified earlier? \\[confirmed\\_cases_{it} = \\beta_0 + \\beta_1average\\_response\\_index_{it} + \\alpha_{i} + \\tau_{t} + \\epsilon_{it}\\] ## Two-way Model two_way &lt;- feols(ConfirmedCases~GovernmentResponseIndex | RegionCode + Date, data = df3, vcov = &quot;iid&quot;) ## NOTE: 1,071 observations removed because of NA values (LHS: 1,071, RHS: 1,071). summary(two_way) ## OLS estimation, Dep. Var.: ConfirmedCases ## Observations: 54,825 ## Fixed-effects: RegionCode: 51, Date: 1,075 ## Standard-errors: IID ## Estimate Std. Error t value Pr(&gt;|t|) ## GovernmentResponseIndex -4524.85 745.754 -6.06749 1.3079e-09 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## RMSE: 760,870.0 Adj. R2: 0.696389 ## Within R2: 6.851e-4 4.8 Test a model with robust-clustered standard errors. Do the results change at all? ## Two-way FE with robust-clustered se two_way_robust &lt;- feols(ConfirmedCases~GovernmentResponseIndex | RegionCode + Date, data = df3, vcov = &quot;twoway&quot;) ## NOTE: 1,071 observations removed because of NA values (LHS: 1,071, RHS: 1,071). summary(two_way_robust) ## OLS estimation, Dep. Var.: ConfirmedCases ## Observations: 54,825 ## Fixed-effects: RegionCode: 51, Date: 1,075 ## Standard-errors: Clustered (RegionCode &amp; Date) ## Estimate Std. Error t value Pr(&gt;|t|) ## GovernmentResponseIndex -4524.85 13438.6 -0.336705 0.73775 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## RMSE: 760,870.0 Adj. R2: 0.696389 ## Within R2: 6.851e-4 Yes, the standard errors are much larger. 4.9 Load in the Texas School Board Data and take a look at the variables. The next few questions are from exercise 5 in Bailey (2021). The basic thoery of the paper is that teachers unions will have less influence on school board members when turnout is greater since a wider swath of voters (non-teachers) will be voting. You can read the abstract below. Paper Abstract: Many governments in the United States hold elections on days other than national Election Day. Recent studies have argued that the low voter turnout that accompanies such off-cycle elections could create an advantage for interest groups. However, the endogeneity of election timing makes it difficult to estimate its causal effect on political outcomes. In this paper, I develop a theoretical framework that explains how changes to election timing affect the electoral fortunes of organized interest groups. I test the theory examining the effects of a 2006 Texas law that forced approximately 20 percent of the state’s school by districts to move their elections to the same day as national elections. ## Loading Data load(&quot;Data/Texas_school_board.RData&quot;) 4.10 Write in notation and estimate the pooled model of the effect of OnCycle on LnAvgSalary. The model is: \\[LnAvgSalary_{it} = \\beta_0 + \\beta_1OnCycle_{it} + \\epsilon_{it}\\] ## Pooled model dta %&gt;% lm(LnAvgSalary ~ OnCycle, .) %&gt;% summary() ## ## Call: ## lm(formula = LnAvgSalary ~ OnCycle, data = .) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.28910 -0.05527 -0.00646 0.05196 0.65215 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 10.671363 0.001018 10478.815 &lt;2e-16 *** ## OnCycle -0.030621 0.003766 -8.131 5e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.08284 on 7137 degrees of freedom ## (64 observations deleted due to missingness) ## Multiple R-squared: 0.009178, Adjusted R-squared: 0.009039 ## F-statistic: 66.11 on 1 and 7137 DF, p-value: 4.995e-16 4.11 Write in notation and estimate a difference-in-difference model of the effect of OnCycle on LnAvgSalary. What is the key coefficient that we are interested in? \\[LnAvgSalary_{it} = \\beta_0 + \\beta_1CycleSwitch_{i} + \\beta_2After_{t} + \\beta_3(CycleSwitch_{i}\\times After_{t}) + \\epsilon_{it}\\] ## DiD model dta %&gt;% lm(LnAvgSalary ~ CycleSwitch*AfterSwitch, .) %&gt;% summary() ## ## Call: ## lm(formula = LnAvgSalary ~ CycleSwitch * AfterSwitch, data = .) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.29811 -0.05595 -0.00734 0.05284 0.65245 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 10.671068 0.001433 7447.598 &lt; 2e-16 *** ## CycleSwitch -0.023982 0.003397 -7.059 1.83e-12 *** ## AfterSwitch 0.009303 0.002188 4.251 2.16e-05 *** ## CycleSwitch:AfterSwitch -0.008590 0.005189 -1.655 0.0979 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.08334 on 7198 degrees of freedom ## (1 observation deleted due to missingness) ## Multiple R-squared: 0.0183, Adjusted R-squared: 0.01789 ## F-statistic: 44.72 on 3 and 7198 DF, p-value: &lt; 2.2e-16 "],["lab-iv-project-runway.html", "5 2/13 Lab IV | Project Runway 5.1 Base R Version 5.2 library(ggplot) Version 1 5.3 library(ggplot) Version 2 5.4 Alternative Plot of Your Choice 5.5 Code Appendix", " 5 2/13 Lab IV | Project Runway Our goal is to visualize the difference between the population percent (popPct) and the survey percent (svyPct) for various age groups. We’ll use the data in the table below (and of course, a full viz would include more subgroups). Create designs on how to present this information. Be ready to share concept and actual viz with the entire class. You can either work individually or in small groups. Do not include code with your visualizations. Instead, create an appendix that displays each code chunk at the end of the document. Make sure there are no warnings or messages displaying too. Use the simulated data to make at least two plots: one in Base R and one in library(ggplot). Then you can use a dataset of your choice for the last two visualizations or keep working with the fake data. Table 5.1: Table: Population and Survey Percentages by Age Group age popPct svyPct 18 to 29 29 19 36 to 50 21 21 51 to 64 30 32 65+ 20 28 5.1 Base R Version 5.2 library(ggplot) Version 1 5.3 library(ggplot) Version 2 5.4 Alternative Plot of Your Choice 5.5 Code Appendix 5.5.1 Setup Code # Load packages used in this session of R library(knitr) library(tidyverse) library(ggplot2) opts_chunk$set(echo = TRUE) options(digits = 2) 5.5.2 Preparation Code df &lt;- data.frame(&quot;age&quot; = c(&quot;18 to 29&quot;, &quot;36 to 50&quot;, &quot;51 to 64&quot;, &quot;65+&quot;), &quot;popPct&quot; = c(29, 21, 30, 20), &quot;svyPct&quot; = c(19, 21, 32, 28)) kable(df, caption = &quot;Table: Population and survey percentages by age group&quot;) 5.5.3 Base R Plot Code Age18to29 &lt;- c(19, 29) Age36to50 &lt;- c(21,21) Age51to64 &lt;- c(32, 30) Over65 &lt;- c(28, 20) age_groups &lt;- cbind(Age18to29, Age36to50, Age51to64, Over65) barplot(age_groups, beside=T, xlab=&quot;Age Group&quot;, names.arg= c(&quot;18 - 29&quot;, &quot;36 - 50&quot;, &quot;51 - 64&quot;, &quot;65+&quot;), ylab=&quot;Percent&quot;, main = &quot;Percent Surveyed and Percent in Population by Age Group&quot;, ylim = c(0,35), las=1) legend(&quot;bottomleft&quot;,c(&quot;Surveyed %&quot;, &quot;Population %&quot;), fill=c(&quot;black&quot;, &quot;light gray&quot;), horiz=FALSE, cex=0.73, bg=&quot;white&quot;) 5.5.4 library(ggplot) First Plot Code df %&gt;% mutate(Population = popPct, Survey = svyPct) %&gt;% dplyr::select(-popPct, -svyPct) %&gt;% pivot_longer(-age, names_to=&quot;Group&quot;, values_to=&quot;Percent&quot;) %&gt;% ggplot(aes(x=age, y=Percent, fill=Group)) + geom_bar(stat=&quot;identity&quot;, position=&quot;dodge&quot;) + scale_fill_grey() + theme_minimal() + labs(x = &quot;Age Group&quot;, y = &quot;Percent&quot;, title = &quot;Population and Survey Sample Proportions by Age Group&quot;) 5.5.5 library(ggplot) Second Plot Code df %&gt;% mutate(Population = popPct, Survey = svyPct) %&gt;% dplyr::select(-popPct, -svyPct) %&gt;% pivot_longer(-age, names_to=&quot;Group&quot;, values_to=&quot;Percent&quot;) %&gt;% ggplot(aes(x=age, y=Percent, fill=Group)) + geom_bar(stat=&quot;identity&quot;, position=&quot;dodge&quot;) + coord_flip() + scale_fill_grey() + theme_minimal() + labs(x = &quot;Age Group&quot;, y = &quot;Percent&quot;, title = &quot;Population and Survey Sample Proportions by Age Group&quot;) 5.5.6 Alternative Plot Code library(apyramid) df %&gt;% mutate(Population = popPct, Survey = svyPct) %&gt;% dplyr::select(-popPct, -svyPct) %&gt;% pivot_longer(-age, names_to=&quot;Group&quot;, values_to=&quot;Percent&quot;) %&gt;% mutate(age = as.factor(age)) %&gt;% age_pyramid(data = ., age_group = &quot;age&quot;, split_by = &quot;Group&quot;, count = &quot;Percent&quot;, show_midpoint = FALSE) + scale_fill_grey() + theme_minimal() + labs(x=&quot;Age Group&quot;, y=&quot;Percent&quot;, fill=NULL, title = &quot;Percent Surveyed and Percent in Population by Age Group&quot;) "],["sls-instrumental-variables.html", "6 2SLS &amp; Instrumental Variables", " 6 2SLS &amp; Instrumental Variables 6.0.1 Preparation # Setup rm(list = ls(all = TRUE)) # Removes objects from the previous session ## Packages library(haven) ## Package to read Stata data library(ivreg) ## Package to run 2sls library(fixest) ## This package can also run 2SLS library(tidyverse) ## For tidyverse commands library(memisc) ## For table outputting ## Loading Data hajj_public &lt;- read_dta(&quot;Data/hajj_public.dta&quot;) Do important life experiences influence political and social views? In particular, does performing the Hajj pilgrimage to Mecca affect the views of pilgrims? David Clingingsmith, Asim Ijaz Khwaja, and Michael Kremer (2009) analyze this question by using two-stage least squares to compare successful and unsuccessful applicants in a lottery used by Pakistan to allocate Hajj visas. We will conduct pared-down models. The paper creates indices and implements additional statistical procedures to produce a broader and clearer picture. It is not a bad idea to read this paper to see how we can extend the methods we learn in class to your own work. I posted the paper on Canvas for your convenience. Data description Variable Description hajj2006 Went on Hajj trip in 2006 success Won the lottery to have expenses covered for Hajj ptygrp Categorical variable indicating size of party for Hajj trip smallpty 1 if small party group, 0 otherwise urban 1 if live in urban area, 0 otherwise age Age female 1 if female, 0 otherwise literate 1 if literate, 0 otherwise x_s7q10 Natl affairs: How often do you follow national affairs in the news on television or on the radio? Binary: 0=Twice a week or less, 1=Several times a week or more x_s14aq10 Religious: Do others regard you as religious? Binary: 1=Religious, 0=Not Religious x_s10bq4 OssamaIncorrect: Do you believe goals Ossama is fighting for are correct? Binary: 1=Not Correct at All/Slightly Incorrect, 0=Correct/Absolutely Correct x_s7q12a GovtForce: Govt should force people to conform to Islamic injunctions. Binary: 1=Agree Strongly/Agree, 0=Neutral/Disagree/Strongly Disagree x_s7q1 NatlInterest How interested would you say you are in national affairs? Binary: 0=Not interested, 1=Interested x_s3q3 Happy: how happy are you? From 1 (not at all happy) to 4 (very happy). x_s10eq2 GirlsSchool: In your opinion, girls should attend school. Binary: 0=Disagree, 1=Agree s10dq1 JobsWomen: When jobs are scarce, men should always have more right to a job than women. Binary: 0=Generally agree, 1=Generally Disagree More details on these and other variables are available in Appendix 3 of the paper. If you cannot access the version, the SSRN version works as well. 6.0.2 (a) Estimate a basic OLS model with “Do others regard you as religious” as the dependent variable as a function of Hajj2006. Explain how there might be endogeneity. hajj_public %&gt;% lm(x_s14aq10~hajj2006, data=.) %&gt;% broom::tidy() ## # A tibble: 2 × 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 (Intercept) 0.767 0.0154 49.8 5 e-323 ## 2 hajj2006 0.0851 0.0199 4.27 2.09e- 5 There may be endogeneity due to baseline bias caused by the religiosity of respondents. A more religious respondent may be more likely to go on a Hajj trip and be classified as religious by others. Going to church, like actually being religious, is also a factor that may be correlated with x and lurking in the error term. 6.0.3 (b) State the requirements of a good instrument and xplain how the “success” variable may satisfy these conditions for a good instrumental variable. The two conditions, inclusion and exclusion, are: \\[Cov(X,Z)\\ne0\\] &amp; \\[Cov(Z,\\epsilon)=0\\] The lottery is randomizes, which means it is not correlated with the error term, or anything else other than the treatment variable, in our model. Further, it meaningfully effects our key independent which is tested below. 6.0.4 (c) Use two different packages to estimate a 2SLS model of Religious as a function of Hajj2006. You can use library(AER), library(ivreg), library(fixest) or any other package for estimating 2SLS models. ## With library(ivreg) hajj_public %&gt;% ivreg(x_s14aq10~hajj2006 | success, data=.) %&gt;% broom::tidy() ## # A tibble: 2 × 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 (Intercept) 0.757 0.0169 44.9 1.09e-281 ## 2 hajj2006 0.101 0.0231 4.40 1.18e- 5 ## With library(fixest) hajj_public %&gt;% feols(x_s14aq10 ~ 1 | hajj2006~success, data=., vcov = &quot;iid&quot;) %&gt;% broom::tidy() ## NOTE: 64 observations removed because of NA values (LHS: 64). ## # A tibble: 2 × 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 (Intercept) 0.757 0.0169 44.9 1.09e-281 ## 2 fit_hajj2006 0.101 0.0231 4.40 1.18e- 5 6.0.5 (d) Show the first stage from the 2SLS model above with lm(). Explain the implications of the results. hajj_public %&gt;% lm(hajj2006~success, data=.) %&gt;% broom::tidy() ## # A tibble: 2 × 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 (Intercept) 0.137 0.00893 15.4 6.35e-50 ## 2 success 0.854 0.0122 69.9 0 The t-score is 69.8663143 which is much higher than the 3 threshold. Our instrument meets in the inclusion condition. 6.0.6 (e) Add covariates for age, literacy, urban, group size and gender to the 2SLS model Religious as a function of Hajj2006. What is different? Which variables are included in the first stage? hajj_public %&gt;% feols(x_s14aq10~age + literate + ptygrp + female + urban | hajj2006 ~ success + age + literate + ptygrp + female + urban, data=., vcov = &quot;iid&quot;) %&gt;% broom::tidy() ## NOTE: 64 observations removed because of NA values (LHS: 64). ## The instruments &#39;age&#39;, &#39;literate&#39; and 3 others have been removed because of collinearity (see $collin.var). ## # A tibble: 7 × 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 (Intercept) 0.493 0.0623 7.92 4.41e-15 ## 2 fit_hajj2006 0.101 0.0227 4.46 8.71e- 6 ## 3 age 0.00269 0.000800 3.36 7.97e- 4 ## 4 literate 0.0146 0.0238 0.616 5.38e- 1 ## 5 ptygrp -0.000955 0.00642 -0.149 8.82e- 1 ## 6 female 0.132 0.0217 6.06 1.69e- 9 ## 7 urban 0.0674 0.0213 3.17 1.56e- 3 hajj_public %&gt;% ivreg(x_s14aq10~hajj2006 + age + literate + ptygrp + female + urban | success + age + literate + ptygrp + female + urban, data=.) %&gt;% summary(diagnostics=TRUE) ## ## Call: ## ivreg(formula = x_s14aq10 ~ hajj2006 + age + literate + ptygrp + ## female + urban | success + age + literate + ptygrp + female + ## urban, data = .) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.9971 0.0486 0.1494 0.2186 0.4310 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.4934864 0.0622823 7.923 4.41e-15 *** ## hajj2006 0.1012173 0.0226841 4.462 8.71e-06 *** ## age 0.0026874 0.0007997 3.361 0.000797 *** ## literate 0.0146344 0.0237657 0.616 0.538131 ## ptygrp -0.0009545 0.0064199 -0.149 0.881821 ## female 0.1316934 0.0217261 6.062 1.69e-09 *** ## urban 0.0673979 0.0212624 3.170 0.001556 ** ## ## Diagnostic tests: ## df1 df2 statistic p-value ## Weak instruments 1 1534 4594.635 &lt;2e-16 *** ## Wu-Hausman 1 1533 1.787 0.182 ## Sargan 0 NA NA NA ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.3776 on 1534 degrees of freedom ## Multiple R-Squared: 0.04825, Adjusted R-squared: 0.04453 ## Wald test: 13.18 on 6 and 1534 DF, p-value: 1.349e-14 6.0.7 (f) Run multiple 2SLS models with OssamaIncorrect, GovtForce, NatlInterest, Happy, GirlsSchool and JobsWomen variables as dependent variables. Use the list of covariates from earlier. If you want, try using a loop (but not necessary). ## OssamaIncorrect hajj_public %&gt;% ivreg(x_s10bq4~hajj2006 + age + literate + ptygrp + female + urban | success + age + literate + ptygrp + female + urban, data=.) %&gt;% broom::tidy() ## GovtForce hajj_public %&gt;% ivreg(x_s7q12a~hajj2006 + age + literate + ptygrp + female + urban | success + age + literate + ptygrp + female + urban, data=.) %&gt;% broom::tidy() ## NatlInterest hajj_public %&gt;% ivreg(x_s7q1~hajj2006 + age + literate + ptygrp + female + urban | success + age + literate + ptygrp + female + urban, data=.) %&gt;% broom::tidy() ## Happy hajj_public %&gt;% ivreg(x_s3q3~hajj2006 + age + literate + ptygrp + female + urban | success + age + literate + ptygrp + female + urban, data=.) %&gt;% broom::tidy() ## Girl School hajj_public %&gt;% ivreg(x_s10eq2~hajj2006 + age + literate + ptygrp + female + urban | success + age + literate + ptygrp + female, data=.) %&gt;% broom::tidy() ## Jobs Women hajj_public %&gt;% ivreg(x_s10dq1~hajj2006 + age + literate + ptygrp + female + urban | success + age + literate + ptygrp + female, data=.) %&gt;% broom::tidy() ## Loop ## DVs dvs &lt;- c(&quot;hajj_public$x_s10bq4&quot;, &quot;hajj_public$x_s7q12a&quot;, &quot;hajj_public$x_s7q1&quot;, &quot;hajj_public$x_s3q3&quot;, &quot;hajj_public$x_s10eq2&quot;, &quot;hajj_public$x_s10dq1&quot;) ## Loop for(i in 1:length(dvs)){ model &lt;- paste(&quot;model&quot;,i, sep=&quot;&quot;) m &lt;- ivreg(as.formula(paste(dvs[i],&quot;~hajj2006 + age + literate + ptygrp + female + urban | success + age + literate + ptygrp + female + urban&quot;)), data=hajj_public) assign(model,m)} "]]
